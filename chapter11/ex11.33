#include <iostream>
#include <fstream>
#include <map>
#include <string>
#include <sstream>

using namespace std;

map<string, string> buildMap(ifstream &map_file)
{
	map<string, string> trans_map;
	for (string key, value; map_file >> key&&getline(map_file, value);)
	{
		if (value.size() > 1)
			trans_map[key] = value.substr(1);
	}
	for (auto &i : trans_map)
		cout << i.first << " " << i.second << endl;
	return trans_map;
}

const string& transform(const string &s, const map<string, string> &m)
{
	auto map_it = m.find(s);
	return map_it == m.cend() ? s : map_it->second;
}

void word_transform(ifstream &map_file, ifstream &input)
{
	auto trans_map = buildMap(map_file);
	for (string text; getline(input, text);)
	{
		istringstream iss(text);
		for (string word; iss >> word;)
			cout << transform(word, trans_map) << " ";
		cout << endl;
	}
}

int main()
{
	ifstream map_file("map_file.txt"), input("input.txt");
	if (map_file&&input)
		word_transform(map_file, input);
	else
		cerr << "can't find the documents." << endl;
	return 0;
}
